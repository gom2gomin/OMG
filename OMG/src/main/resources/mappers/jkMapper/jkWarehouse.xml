<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.oracle.OMG.mappers.jkWarehouse">

		<select id="monthDataList" resultType="Warehouse" parameterType="map">
			SELECT w.*, i.name, m.mem_name
			FROM Warehouse w
			INNER JOIN Item i ON w.code = i.code
			INNER JOIN Customer c ON i.custcode = c.custcode
			INNER JOIN Member m ON c.mem_id = m.mem_id
			WHERE w.YM = #{month, jdbcType=VARCHAR}
			AND (
	        (#{invType, jdbcType=VARCHAR} = 'ALL' AND (w.INVEN = 0 OR w.INVEN = 1))
	        OR (#{invType, jdbcType=VARCHAR} = 'OPENING' AND w.INVEN = 0)
	        OR (#{invType, jdbcType=VARCHAR} = 'CLOSING' AND w.INVEN = 1))
		</select>


		<select id="getPurchaseData" statementType="CALLABLE" parameterType="hashmap" resultType="hashmap">
		    {call GET_PURCHASE_DATA(
		        #{month, mode=IN, jdbcType=VARCHAR},
		        #{result, mode=OUT, jdbcType=CURSOR, javaType=java.sql.ResultSet, resultMap=resultmap01})}
		</select>

		<resultMap id="resultmap01" type="Warehouse">
		    <result property="title" column="TITLE" />
		    <result property="purStatus" column="PUR_STATUS" />
		    <result property="custCode" column="CUSTCODE" />
		    <result property="purDate" column="PUR_DATE" />
		    <result property="code" column="CODE" />
		    <result property="qty" column="QTY" />
		    <result property="price" column="PRICE" />
		</resultMap> 

		<select id="selectItem" resultType="map">
			SELECT i.name , m.mem_name, w.cnt
		    FROM item i
		    INNER JOIN customer c ON i.custcode = c.custcode
		    INNER JOIN member m ON c.mem_id = m.mem_id
		    INNER JOIN warehouse w ON i.code = w.code
		    WHERE i.code = #{code} and w.ym = #{ym}
		</select>

		
		<select id="selectItem2" resultType="map">
		 	SELECT i.name, m.mem_name
		    FROM item i
		    INNER JOIN customer c ON i.custcode = c.custcode
		    INNER JOIN member m ON c.mem_id = m.mem_id
		    WHERE i.code = #{code}
		</select>
		
		<insert id="insertInv" parameterType="Warehouse">
		    <!-- 이전에 가져온 Item 테이블의 code 값 사용 -->
		    <selectKey keyProperty="code" resultType="int" order="BEFORE">
		        SELECT code FROM item WHERE code = #{code, jdbcType=INTEGER}
		    </selectKey>
		
		    <!-- Warehouse 테이블에 삽입 -->
		    INSERT INTO Warehouse(ym, inven, code, cnt, reg_date)
		    VALUES(#{ym}, 0, #{code}, #{cnt}, SYSDATE)
		</insert>
		
  		<update id="updateInv" parameterType="Warehouse">
	        UPDATE Warehouse
	        SET cnt = #{cnt}
	        WHERE ym = #{ym}
	        AND code = #{code}
   		</update>

		<delete id="deleteInv" parameterType="Warehouse">
		    DELETE FROM Warehouse
		    WHERE ym = #{ym}
		    AND code = #{code}
		</delete>
		
		<select id="purMonthData" parameterType="Purchase" resultType="Purchase">
		Select *
		From (Select ROWNUM rn, a.*
				From(Select p.*, m.mem_name appli_name, c.company, c.mem_id mgr_id
				    From purchase p, member m, customer c
				    Where p.mem_id = m.mem_id
	                <if test="custcode > 0">
	                    AND (p.custcode = #{custcode})
	                </if>
	                <if test="pur_date != null">
	                    AND (p.pur_date = #{pur_date})
	                </if>
			        and p.custcode = c.custcode
				    Order by p.pur_date DESC) a
		     ) b
		WHERE rn BETWEEN #{start} and #{end}
	</select>
	
	   <update id="callInboundPD" statementType="CALLABLE">
        {CALL process_incoming_inventory2(
            #{purDate, mode=IN, jdbcType=VARCHAR},
            #{custCode, mode=IN, jdbcType=NUMERIC}
        )}
    </update>
    <select id="inboundList" parameterType="Warehouse" resultType="Warehouse">
    	SELECT p.pur_date, pd.code, i.name, c.company, pd.qty, m.mem_name, w.reg_date, w.inven
		FROM purchase p
		JOIN member m ON p.mem_id = m.mem_id
		JOIN customer c ON p.custcode = c.custcode
		JOIN pur_detail pd ON p.pur_date = pd.pur_date AND p.custcode = pd.custcode
		JOIN item i ON pd.code = i.code
		JOIN warehouse w ON pd.code = w.code AND w.inven = 1
		WHERE p.pur_status = 2
		ORDER BY p.pur_date DESC

    </select>
    
    	<select id="inboundTotal" parameterType="Warehouse" resultType="int">
		SELECT count(*)
		FROM warehouse
	    WHERE inven = 1
	</select>
	
	  <select id="monthInbound" parameterType="Warehouse" resultType="Warehouse">
    	SELECT p.pur_date, pd.code, i.name, c.company, pd.qty, m.mem_name, w.reg_date, w.inven
  FROM purchase p
  JOIN member m ON p.mem_id = m.mem_id
  JOIN customer c ON p.custcode = c.custcode
  JOIN pur_detail pd ON p.pur_date = pd.pur_date AND p.custcode = pd.custcode
  JOIN item i ON pd.code = i.code
  JOIN warehouse w ON pd.code = w.code AND w.inven = 1
  WHERE p.pur_status = 2
    AND (#{inboundMonth} IS NULL OR TO_CHAR(w.reg_date, 'YYYY-MM') = #{inboundMonth, jdbcType=VARCHAR})
  ORDER BY p.pur_date DESC
    </select>
    
</mapper>