<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.oracle.OMG.mappers.jkWarehouse">

	
<!-- 		<select id="monthDataList" resultType="Warehouse" parameterType="map">
		    SELECT *
		    FROM Warehouse
		    WHERE YM = #{month, jdbcType=VARCHAR}
		    AND (
		        (#{invType, jdbcType=VARCHAR} = 'ALL' AND (INVEN = 0 OR INVEN = 1))
		        OR (#{invType, jdbcType=VARCHAR} = 'OPENING' AND INVEN = 0)
		        OR (#{invType, jdbcType=VARCHAR} = 'CLOSING' AND INVEN = 1)
		    )
		</select> -->

		<select id="monthDataList" resultType="Warehouse" parameterType="map">
		SELECT w.*, i.name, m.mem_name
		FROM Warehouse w
		INNER JOIN Item i ON w.code = i.code
		INNER JOIN Customer c ON i.custcode = c.custcode
		INNER JOIN Member m ON c.mem_id = m.mem_id
		WHERE w.YM = #{month, jdbcType=VARCHAR}
		AND (
        (#{invType, jdbcType=VARCHAR} = 'ALL' AND (w.INVEN = 0 OR w.INVEN = 1))
        OR (#{invType, jdbcType=VARCHAR} = 'OPENING' AND w.INVEN = 0)
        OR (#{invType, jdbcType=VARCHAR} = 'CLOSING' AND w.INVEN = 1)
    )
</select>


		<select id="getPurchaseData" statementType="CALLABLE" parameterType="hashmap" resultType="hashmap">
		    {call GET_PURCHASE_DATA(
		        #{month, mode=IN, jdbcType=VARCHAR},
		        #{result, mode=OUT, jdbcType=CURSOR, javaType=java.sql.ResultSet, resultMap=resultmap01}
		    )}
		</select>

		<resultMap id="resultmap01" type="Warehouse">
		    <result property="title" column="TITLE" />
		    <result property="purStatus" column="PUR_STATUS" />
		    <result property="custCode" column="CUSTCODE" />
		    <result property="purDate" column="PUR_DATE" />
		    <result property="code" column="CODE" />
		    <result property="qty" column="QTY" />
		    <result property="price" column="PRICE" />
		</resultMap> 

		<select id="selectItem" resultType="map">
		 SELECT i.name , m.mem_name, w.cnt
		    FROM item i
		    INNER JOIN customer c ON i.custcode = c.custcode
		    INNER JOIN member m ON c.mem_id = m.mem_id
		    INNER JOIN warehouse w ON i.code = w.code
		    WHERE i.code = #{code} and w.ym = #{ym}
		</select>

		
		<select id="selectItem2" resultType="map">
		 	SELECT i.name, m.mem_name
		    FROM item i
		    INNER JOIN customer c ON i.custcode = c.custcode
		    INNER JOIN member m ON c.mem_id = m.mem_id
		    WHERE i.code = #{code}
		</select>
		
		<insert id="insertInv" parameterType="Warehouse">
		    <!-- 이전에 가져온 Item 테이블의 code 값 사용 -->
		    <selectKey keyProperty="code" resultType="int" order="BEFORE">
		        SELECT code FROM item WHERE code = #{code, jdbcType=INTEGER}
		    </selectKey>
		
		    <!-- Warehouse 테이블에 삽입 -->
		    INSERT INTO Warehouse(ym, inven, code, cnt, reg_date)
		    VALUES(#{ym}, 0, #{code}, #{cnt}, SYSDATE)
		</insert>


</mapper>